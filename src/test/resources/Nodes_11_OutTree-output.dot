digraph "src/test/resources/Nodes_11_OutTree-output.dot" {
	graph [ ui.quality=true ];
	graph [ ui.antialias=true ];
	graph [ ui.stylesheet=url('src/main/java/graphStyleSheet.css')) ];
	0 [Processor=1,ui.label=0,Start=0,Weight=50];
	1 [ui.class=partition1000,Processor=2,ui.label=1,Start=59,Weight=70];
	2 [ui.class=partition1000,Processor=1,ui.label=2,Start=50,Weight=90];
	3 [ui.class=partition10000,Processor=2,ui.label=3,Start=129,Weight=100];
	4 [ui.class=partition300000,Processor=1,ui.label=4,Start=140,Weight=40];
	5 [ui.class=partition300000,Processor=2,ui.label=5,Start=229,Weight=20];
	6 [ui.class=partition300000,Processor=1,ui.label=6,Start=180,Weight=100];
	7 [ui.class=partition300000,Processor=2,ui.label=7,Start=249,Weight=80];
	8 [ui.class=partition300000,Processor=1,ui.label=8,Start=280,Weight=50];
	9 [ui.class=partition300000,Processor=2,ui.label=9,Start=329,Weight=20];
	10 [ui.class=partition300000,Processor=1,ui.label=10,Start=330,Weight=20];
	0 -> 1 [Weight=9];
	0 -> 2 [Weight=7];
	0 -> 3 [Weight=4];
	1 -> 4 [Weight=10];
	1 -> 5 [Weight=7];
	1 -> 6 [Weight=5];
	2 -> 7 [Weight=5];
	2 -> 8 [Weight=3];
	2 -> 9 [Weight=10];
	3 -> 10 [Weight=4];
}